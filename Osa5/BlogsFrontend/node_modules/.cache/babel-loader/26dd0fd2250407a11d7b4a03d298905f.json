{"ast":null,"code":"import _slicedToArray from \"/home/ousavola/Fullstack/Osa5/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ousavola/Fullstack/Osa5/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport Blog from './components/Blog';\nimport LoginForm from './components/LoginForm';\nimport CreateBlogForm from './components/CreateBlogForm';\nimport Notification from './components/Notification';\nimport Togglable from './components/Togglable';\nimport { useField } from './hooks';\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        blogs = _useState2[0],\n        setBlogs = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n\n  const author = useField('text');\n  const title = useField('text');\n  const url = useField('url');\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errorMessage = _useState6[0],\n        setErrorMessage = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const usernameLogin = useField('text');\n  const passwordLogin = useField('password');\n  useEffect(() => {\n    blogService.getAll().then(initialBlogs => {\n      console.log('promise fulfilled');\n      initialBlogs.sort((a, b) => b.likes - a.likes);\n      setBlogs(initialBlogs);\n      console.log(initialBlogs);\n    });\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const rows = () => blogs.map(blog => React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    user: user,\n    handleLikes: () => handleLikes(blog.id),\n    handleRemove: () => handleRemove(blog.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    const username = usernameLogin.value;\n    const password = passwordLogin.value;\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user));\n      usernameLogin.reset();\n      passwordLogin.reset();\n      setUser(user);\n      blogService.setToken(user.token);\n    } catch (exception) {\n      setErrorMessage('Wrong username or password');\n      setTimeout(() => {\n        setErrorMessage('');\n      }, 5000);\n    }\n  };\n\n  const timeout = () => {\n    setTimeout(() => {\n      setMessage('');\n      setErrorMessage('');\n    }, 5000);\n  };\n\n  const handleLogout = event => {\n    event.preventDefault();\n    window.localStorage.removeItem('loggedBlogAppUser');\n    setUser(null);\n    setMessage('You are succesfully logged out');\n    timeout();\n  };\n\n  const loginForm = () => React.createElement(Togglable, {\n    buttonLabel: \"sign in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(LoginForm, {\n    handleLogin: handleLogin,\n    username: usernameLogin,\n    password: passwordLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }));\n\n  const blogForRef = React.createRef();\n\n  const createBlogForm = () => React.createElement(Togglable, {\n    buttonLabel: \"Add a new Blog\",\n    ref: blogForRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(CreateBlogForm, {\n    handleAddBlog: handleAddBlog,\n    title: title,\n    author: author,\n    url: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }));\n\n  const handleLikes = async id => {\n    const blog = blogs.find(b => b.id === id);\n    console.log(blog);\n    const likes = blog.likes + 1;\n    const userId = blog.user.id;\n    console.log(likes);\n    console.log(id);\n    const newBlog = {\n      user: userId,\n      likes: likes,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url\n    };\n    const updatetBlog = await blogService.update(blog.id, newBlog);\n    const updatetBlogs = blogs.map(b => b.id !== updatetBlog.id ? b : updatetBlog);\n    updatetBlogs.sort((a, b) => b.likes - a.likes);\n    setBlogs(updatetBlogs);\n  };\n\n  const handleRemove = id => {\n    const blog = blogs.find(b => b.id === id);\n    const confirmed = window.confirm(`Are you sure, you want to delete ${blog.title} by ${blog.author}`);\n\n    if (confirmed) {\n      console.log('true');\n      blogService.deleteBlog(blog.id);\n      setBlogs(blogs.filter(b => b.id !== id));\n    }\n  };\n\n  const handleAddBlog = event => {\n    event.preventDefault();\n    blogForRef.current.toggleVisibility();\n    const blogObject = {\n      author: author.value,\n      title: title.value,\n      url: url.value\n    };\n    blogService.create(blogObject).then(returnedBlog => {\n      console.log(returnedBlog);\n      setMessage(`A new blog ${title} by ${author} has been added`);\n      timeout();\n      setBlogs(blogs.concat(returnedBlog));\n      author.reset();\n      title.reset();\n      url.reset();\n    }).catch(error => {\n      setErrorMessage(error.message, 'Validation error! Title and url required. Url must be at least 4 and title at least 1 character long');\n      timeout();\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(Notification, {\n    message: message,\n    errorMessage: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), user === null ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Login\"), loginForm()) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, user.name, \" logged in\"), React.createElement(\"form\", {\n    onSubmit: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"logout\")), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Add new blog\"), createBlogForm(), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Blogs\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, rows())));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ousavola/Fullstack/Osa5/src/App.js"],"names":["React","useState","useEffect","blogService","loginService","Blog","LoginForm","CreateBlogForm","Notification","Togglable","useField","App","blogs","setBlogs","user","setUser","author","title","url","errorMessage","setErrorMessage","message","setMessage","usernameLogin","passwordLogin","getAll","then","initialBlogs","console","log","sort","a","b","likes","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","rows","map","blog","id","handleLikes","handleRemove","handleLogin","event","preventDefault","username","value","password","login","setItem","stringify","reset","exception","setTimeout","timeout","handleLogout","removeItem","loginForm","blogForRef","createRef","createBlogForm","handleAddBlog","find","userId","newBlog","updatetBlog","update","updatetBlogs","confirmed","confirm","deleteBlog","filter","current","toggleVisibility","blogObject","create","returnedBlog","concat","catch","error","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Blog from './components/Blog'\nimport LoginForm from './components/LoginForm'\nimport CreateBlogForm from './components/CreateBlogForm'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport { useField } from './hooks'\n\nfunction App() {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const author = useField('text')\n  const title = useField('text')\n  const url = useField('url')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [message, setMessage] = useState('')\n  const usernameLogin = useField('text')\n  const passwordLogin = useField('password')\n\n  useEffect(() => {\n    blogService\n      .getAll()\n      .then(initialBlogs => {\n        console.log('promise fulfilled')\n        initialBlogs.sort((a, b) => b.likes - a.likes)\n        setBlogs(initialBlogs)\n        console.log(initialBlogs)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const rows = () =>\n    blogs.map(blog =>\n      <Blog key={blog.id} blog={blog} user={user}\n        handleLikes={() => handleLikes(blog.id)}\n        handleRemove={() => handleRemove(blog.id)}/>\n    )\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    const username = usernameLogin.value\n    const password = passwordLogin.value\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      window.localStorage.setItem(\n        'loggedBlogAppUser', JSON.stringify(user)\n      )\n      usernameLogin.reset()\n      passwordLogin.reset()\n      setUser(user)\n      blogService.setToken(user.token)\n    } catch (exception) {\n      setErrorMessage('Wrong username or password')\n      setTimeout(() => {\n        setErrorMessage('')\n      }, 5000)\n    }\n  }\n\n  const timeout = () => {\n    setTimeout(() => {\n      setMessage('')\n      setErrorMessage('')\n    }, 5000)\n  }\n\n  const handleLogout = (event) => {\n    event.preventDefault()\n    window.localStorage.removeItem('loggedBlogAppUser')\n    setUser(null)\n    setMessage('You are succesfully logged out')\n    timeout()\n  }\n\n  const loginForm = () => (\n    <Togglable buttonLabel=\"sign in\">\n      <LoginForm\n        handleLogin={handleLogin}\n        username= {usernameLogin}\n        password={passwordLogin}\n      />\n    </Togglable>\n  )\n  const blogForRef = React.createRef()\n\n  const createBlogForm = () => (\n    <Togglable buttonLabel=\"Add a new Blog\" ref={blogForRef}>\n      <CreateBlogForm\n        handleAddBlog={handleAddBlog}\n        title={title}\n        author={author}          \n        url={url}\n      />\n    </Togglable>\n  )\n\n  const handleLikes = async (id) => {\n    const blog = blogs.find(b => b.id === id)\n    console.log(blog)\n    const likes = blog.likes +1\n    const userId = blog.user.id\n    console.log(likes)\n    console.log(id)\n    const newBlog = {\n      user: userId,\n      likes: likes,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url\n    }\n    const updatetBlog = await blogService.update(blog.id, newBlog)\n    const updatetBlogs = blogs.map(b => b.id !== updatetBlog.id ? b : updatetBlog)\n    updatetBlogs.sort((a, b) => b.likes -a.likes)\n    setBlogs(updatetBlogs)\n  }\n\n  const handleRemove = id => {\n    const blog = blogs.find(b => b.id === id)\n    const confirmed = window.confirm(`Are you sure, you want to delete ${blog.title} by ${blog.author}`)\n    if (confirmed) {\n      console.log('true')\n      blogService.deleteBlog(blog.id)\n      setBlogs(blogs.filter(b => b.id !== id))\n    }\n  }\n\n  const handleAddBlog = (event) => {\n    event.preventDefault()\n    blogForRef.current.toggleVisibility()\n    const blogObject = {\n      author: author.value,\n      title: title.value,\n      url: url.value,\n    }\n\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        console.log(returnedBlog)\n        setMessage(`A new blog ${title} by ${author} has been added`)\n        timeout()\n        setBlogs(blogs.concat(returnedBlog))\n        author.reset()\n        title.reset()\n        url.reset()\n      })\n      .catch(error => {\n        setErrorMessage(error.message, 'Validation error! Title and url required. Url must be at least 4 and title at least 1 character long')\n        timeout()\n      })\n  }\n\n  return (\n    <div>\n      <Notification message={message} errorMessage={errorMessage}/>\n      {user === null ?\n        <div>\n          <h1>Login</h1>\n          {loginForm()}\n        </div> :\n        <div>\n          <p>{user.name} logged in</p>\n          <form onSubmit={handleLogout}>\n            <button type=\"submit\">logout</button>\n          </form>\n          <h2>Add new blog</h2>\n          {createBlogForm()}\n\n          <h1>Blogs</h1>\n          <ul>\n            { rows() }\n          </ul>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}